clear all;
close all;
clc;
x1 = load('C:\Users\vilab15\Desktop\ECG3.txt'); % load the ECG signal from the file
fs = 200;              % Sampling rate
N = length(x1);       % Signal length
t = [0:N-1]/fs;        % time index
figure(1);
subplot(4,1,1),
plot(t,x1);
xlabel('second');
ylabel('Volts');
title('Input ECG Signal');
x1 = x1 - mean(x1);    % cancel DC components
x1 = x1/max(abs(x1)); % normalize to one
subplot(4,1,2),
plot(t,x1);
xlabel('second');
ylabel('Volts');
title(' ECG Signal after cancellation DC drift and normalization');
% LPF (1-z^-6)^2/(1-z^-1)^2
b=[1 0 0 0 0 0 -2 0 0 0 0 0 1];
a=[1 -2 1]; 
h_LP=filter(b,a,[1 zeros(1,12)]); % transfer function of LPF
x2 = conv(x1,h_LP);
%x2 = x2 (6+[1: N]); %cancel delay
x2 = x2/max(abs(x2)); % normalize , for convenience .
subplot(4,1,3),
plot([0:length(x2)-1]/fs,x2);
xlabel('second');ylabel('Volts');title(' ECG Signal after LPF')
xlim([0 max(t)]);
% HPF = Allpass-(Lowpass) = z^-16-[(1-z^-32)/(1-z^-1)]
b = [-1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 32 -32 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1];
a = [1 -1];
h_HP=filter(b,a,[1 zeros(1,32)]); % impulse response of HPF
x3 = conv(x2,h_HP);
%x3 = x3 (16+[1: N]); %cancel delay
x3 = x3/max(abs(x3)); % normalize , for convenience .
subplot(4,1,4),
plot([0:length(x3)-1]/fs,x3);
xlabel('second');
ylabel('Volts');
title(' ECG Signal after HPF');
xlim([0 max(t)]);
%Derivative Filtering
% Make impulse response
h = [-1 -2 0 2 1]/8;
% Apply filter
x4 = conv (x3 ,h);
x4 = x4(2+[1:N]);
x4 = x4/max(abs(x4));  % normalize , for convenience .
figure(2);
subplot(5,1,1),
plot([0:length(x4)-1]/fs,x4);
xlabel('second');ylabel('Volts');title(' ECG Signal after Derivative');
%Squaring
x5 = x4.^2; %element by  element squaring like c=power(x4,2)
x5 = x5/max(abs(x5));  % normalize , for convenience
subplot(5,1,2),
plot([0:length(x5)-1]/fs,x5);
xlabel('second');ylabel('Volts');title(' ECG Signal Squaring');
%Averaging
% Make impulse response
h = ones (1 ,31)/31;
Delay = 15; % Delay in samples
% Apply filter
x6 = conv (x5 ,h);
x6 = x6 (15+[1:N]);
x6 = x6/max(abs(x6)); % normalize , for convenience
subplot(5,1,3),
plot([0:length(x6)-1]/fs,x6);
xlabel('second');ylabel('Volts');title(' ECG Signal after Averaging');
%Moving Window Integration
subplot(5,1,4),
plot(t(200:500),x1(200:500)/max(x1));
xlabel('second');ylabel('Integrated');
xlim([1 3]);
%Decision rule/Thresholding
max_h = max(x6);
thresh = mean(x6);
poss_reg =(x6>thresh*max_h)';
left = find(diff([0 poss_reg])==1);  %apply approx. derivative and find indices of nonzero elements
right = find(diff([poss_reg 0])==-1);
left=left-(6+16);  % cancel delay because of LP and HP
right=right-(6+16);% cancel delay because of LP and HP
for i=1:length(left)
    [R_value(i) R_loc(i)] = max( x1(left(i):right(i)) );
R_loc(i) = R_loc(i)-1+left(i); % add offset
end
% there is no selective wave
R_loc=R_loc(find(R_loc~=0));
subplot(5,1,5),	
title('ECG Signal with R points');
plot(t,x1/max(x1),t(R_loc),R_value, 'r^');
